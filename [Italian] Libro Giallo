Ethereum – un registro di transazioni decentralizzato generalizzato sicuro


Abstract. Il paradigma della blockchain, quando innestato a transazioni crittograficamente sicure ha dimostrato la sua utilità in numerosi progetti, non ultima Bitcoin. Tali progetti possono essere visualizzati come una semplice applicazione all’interno di una risorsa digitale decentralizzata ma unica. Tale paradigma può essere definito come macchina transazionale unica a stato condiviso.
Ethereum implementa questo paradigma in maniera generalizzata. Inoltre, fornisce una pluralità di risorse simili, ognuna delle quali con uno stato ed un codice operativo distinto ma capace di interagire attraverso una struttura di trasmissione di messaggi con ognuna delle altre risorse. Discutiamo qui il suo sviluppo, i problemi di implementazione, le opportunità che fornisce ed alcuni possibili ostacoli futuri.

1	Introduzione
La disponibilità massiccia di connessioni internet nella maggior parte del pianeta ha permesso alla trasmissione globale di informazioni di diventare incredibilmente conveniente. Le iniziative radicate nella tecnologia – come Bitcoin – hanno dimostrato, attraverso la potenza di “meccanismi del consenso” e del rispetto volontario del contratto sociale, che è possibile utilizzare la rete per creare un sistema di trasferimento di valore decentralizzato, condiviso liberamente in tutto il mondo e virtualmente gratuito. 
Tale sistema può considerarsi una versione molto specializzata di un meccanismo crittografico sicuro, basato sulle transazioni. Sistemi successivi quali Namecoin hanno adottato questa “applicazione valutaria” della tecnologia all’interno di altre applicazioni, sebbene alquanto semplici.
Ethereum costituisce un progetto che tenta di costruire la versione generalizzata di tale tecnologia; ossia una tecnologia su cui qualsiasi idea, applicata al meccanismo basato sulle transazioni di stato, possa essere sviluppata. Inoltre esso mira a fornire allo sviluppatore un sistema end-to-end strettamente integrato per la creazione di software secondo un paradigma di computazione fino ad ora sconosciuto alla maggioranza: un sistema di computazione object messaging affidabile.

I.I Fattori Chiave. Gli obiettivi di questo progetto sono molteplici; un obiettivo chiave è di facilitare le transazioni tra individui consenzienti che non avrebbero altrimenti mezzi per garantire reciproca fiducia. Ciò potrebbe essere dovuto alla distanza geografica, a difficoltà di interfacciamento, o ad incompatibilità, incompetenza, indisponibilità, spese, incertezza, non convenienza o difetto dei sistemi legali esistenti. Nel momento in cui sarà specificato un sistema di cambiamento di stato attraverso un linguaggio di sviluppo ricco e privo di ambiguità, e predisposta una architettura con caratteristiche tali che sia ragionevole attendersi che un accordo tra due parti sarà di per sé in grado di costringere le parti a rispettarne i termini, tutti gli strumenti utili allo scopo saranno disponibili.
Gli accordi nel sistema proposto avrebbero diverse caratteristiche non necessariamente presenti nel mondo reale. Ad esempio, l’incorruttibilità di giudizio, spesso difficile da trovare, sarebbe naturalmente ottenuta tramite un interprete algoritmico. La trasparenza, ossia la possibilità di constatare esattamente, attraverso il transaction log, le regole o il codice informativo, le modalità con cui uno stato o un giudizio siano pervenuti, non è riscontrata mai nelle società umane, dal momento che il linguaggio naturale è per sua natura vago, le informazioni sono spesso incomplete ed i pregiudizi sono difficili da eliminare.
In complesso, desidero fornire un sistema tale che gli utenti possano essere sicuri del risultato finale, a prescindere dal soggetto, sistema od organizzazione con cui interagiscono, e di come a tale risultato si sia pervenuti.

I.II Lavori precedenti. Fu Buterin [2013] a proporre per primo i concetti fondamentali del presente lavoro, nel tardo novembre del 2013. Nonostante questo si sia evoluto in molteplici maniere, il concetto chiave della blockchain, accompagnata da un linguaggio Turing-completo ed uno spazio di archiviazione inter-transazione praticamente illimitato, rimane immutata. Il sistema Hashcash introdotto da Back [2002] (in una retrospettiva quinquennale), costituì il primo impianto per l’impiego di un sistema che richiedesse una prova dell’impiego di risorse computazionali tramite decifrazione crittografica (proof of work), quale mezzo per la trasmissione di un segnale di valore in Internet. Nonostante esso non fu mai adottato su ampia scala, il lavoro fu poi riciclato ed espanso da Nakamoto [2008] per concepire un meccanismo crittograficamente sicuro per approdare ad un consenso generalizzato decentralizzato sull’ordine ed il contenuto di una serie di transazioni finanziarie a firma digitale crittografica. Dai frutti di questo progetto, Bitcoin, è derivata una prima impressione di un registro di transazioni decentralizzato.

Altri progetti furono poi costruiti sul successo di Bitcoin; le alt-coins introdussero numerose altre valute attraverso l’alterazione del protocollo. Alcune delle più famose sono Litecoin e Primecoin, discusse da Sprankel [2013]. Altri progetti hanno puntato a sfruttare il meccanismo dietro ai core values del protocollo e riproporli; Aron [2012] discute, ad esempio, il progetto Namecoin che mira a creare un sistema di name-resolution [http://en.wikipedia.org/wiki/Name_resolution] decentralizzato. 
Ulteriori progetti puntano sullo sviluppo del network Bitcoin stesso, facendo leva sulle ingenti somme che interessano il sistema e l’altrettanto vasta potenza di calcolo necessaria per il “meccanismo di consenso”. Il progetto Mastercoin, proposto da Willett [2013], mira a costruire un protocollo arricchito, rispetto alla base di quello Bitcoin, usando parti ausiliarie e aggiungendo numerose funzionalità di alto livello. Il progetto Coloured Coins, promosso da Rosenfeld [2012], adotta una strategia simile ma più semplice, fregiando le regole di una transazione con l’obiettivo di rompere la fungibilità della valuta di base delle Bitcoin, e consentendo la creazione ed il tracciamento di token (gettoni) con l’uso di uno speciale software detto “chroma-wallet” coerente con il protocollo.
Ulteriori lavori sono stati portati a termine in questo campo, scartando i principi della decentralizzazione; Ripple, discusso da Boutellier e Heinzen [2014], ha tentato di creare un sistema “federato” per lo scambio di valuta, dando vita ad un nuovo tipo di camera di compensazione finanziaria. Questa ha dimostrato che possono essere conseguiti grandi guadagni di efficienza mettendo da parte la premessa della decentralizzazione.
Lavori seminali sugli “smart contracts” sono stati effettuati da Szabo [1997] e Miller [1997]. Fu negli anni Novanta che divenne chiaro che l’adempimento forzoso di un contratto tramite algoritmi sarebbe potuto divenire un punto di forza per il progresso della cooperazione umana. Sebbene non furono avanzate proposte in tal senso, venne evidenziata la concreta possibilità che gli algoritmi avrebbero influenzato l’evoluzione delle leggi future. Alla luce di ciò, Ethereum può essere considerato come un impianto generale di un sistema critto-legislativo.

2	Il Paradigma Blockchain

Ethereum, preso nel suo insieme, può essere visto come una macchina basata sulle transazioni di stato: a partire da uno stato iniziale, si eseguono in maniera incrementale delle transazioni in grado di trasformarlo in un certo stato finale. Questo stato finale verrà dunque accettato quale versione canonica del mondo di Ethereum. Lo stato può includere informazioni che riguardano il saldo di un conto corrente, la reputazione, accordi, dati concernenti informazioni legate al mondo fisico; in breve, qualsiasi cosa che possa essere rappresentata da un computer è ammissibile. Ergo, le transazioni rappresentano un arco valido tra due stati; l’aspetto della “validità” è cruciale – il numero dei cambiamenti di stato non validi è molto maggiore rispetto a quelli validi. I cambiamenti di stato non validi potrebbero, a.e. essere oggetti come la riduzione di un conto corrente in assenza di un corrispettivo accrescimento altrove. Un cambiamento di stato, per essere ritenuto valido, deve derivare da una transazione. Formalmente
(1)σ_(t+1)≡ϒ(σ_t,T)

Dove ϒ è la funzione del cambiamento di stato. In Ethereum, ϒ, assieme a σ, sono considerevolmente più potenti di qualsiasi sistema comparabile; ϒ consente ai componenti di svolgere una computazione arbitraria, mentre σ è il parametro che permette ai componenti di immagazzinare uno stato arbitrario tra una transazione e un’altra.
Le transazioni sono raccolte e riordinate in  blocchi; i blocchi a loro volta sono concatenati usando un hash crittografico che agisce come mezzo di riferimento. Un blocco funziona come un libro mastro, che registra una serie di transazioni, collegandole a quelle del blocco precedente e pone un identificatore per lo stato finale (non lo immagazzina, in quanto sarebbe troppo grande). Inoltre, danno rilevanza alle serie di transazioni concedendo incentivi ai nodi da decifrare (mining). Questa incentivazione ha luogo come funzione di transizione di stato, garantendo un premio sul conto del “minatore”.
Il mining è quel processo che fornisce supporto alla decifrazione di una serie di transazioni (un blocco) attraverso l’impiego di uno sforzo computazionale, e che porta a compimento il processo prima di qualsiasi altro blocco concorrente. Si ottiene grazie ad una prova crittograficamente sicura. Questo schema è noto come proof-of-work, ed è discusso in dettaglio nella sezione 11.5. 
Formalmente, espandiamo a 
(2)
(3)
(4)
Dove Ω è la funzione di finalizzazione del blocco di transizione di stato (una funzione che premia un candidato); B è il blocco in questione, che assieme ad altri componenti, include una serie di transazioni; infine Π è la funzione di transizione di stato a livello del singolo blocco.
Questa è la base del paradigma blockchain, un modello che costituisce la spina dorsale non solo di Ethereum, ma di tutti i sistemi basati sul consenso decentralizzato ad oggi esistenti.

II.I Valore. Affinché cenga incentivata la computazione all’interno del network, è necessario convergere ad un accordo sul metodo per la trasmissione di valore. Per affrontare questo tema, Ethereum ha una sua valuta intrinseca, Ether, conosciuta anche come ETH e a volte nominata con il simbolo Đ (dall’Inglese antico). Il più piccolo sottomultiplo di Ether, e di conseguenza quello su cui tutti gli interi della valuta sono conteggiati, è il Wei. Un Ether corrisponde a 10^18 Wei. Esistono inoltre altri sottomultipli di Ether:

Nel presente lavoro, qualsiasi riferimento al valore nel contesto degli Ether, valuta, bilancio o pagamento, sarà considerata in Wei.

II.II Quale Storia? Essendo il sistema decentralizzato ed avendo tutte le parti una opportunità di creare un nuovo blocco in coda ad una catena di blocchi preesistente, la struttura risultante sarà necessariamente quella di un albero di blocchi. Affinché venga formato un consenso riguardo il sentiero di sviluppo di questo albero, dalla radice (il blocco iniziale) alla foglia (il blocco contenente le transazioni più recenti), deve esistere uno schema su cui converga l’accordo degli utenti. Nel caso in cui emerga una discrepanza tra due nodi sul sentiero radice-foglia più corretto per la blockchain, viene a crearsi un bivio. Da questo deriva, in un certo punto nel tempo (corrispondente ad un blocco), la possibile coesistenza di più stati del sistema: in questa situazione alcuni nodi riterrebbero “canonico” un certo blocco di transazioni, mentre altri giudicherebbero valido un altro blocco, che potrebbe potenzialmente contenere transazioni radicalmente differenti e/o incompatibili. Una situazione del genere deve essere evitata a tutti i costi in quanto l’incertezza che ne deriverebbe minerebbe alle fondamenta la fiducia nell’intero sistema.
Lo schema che utilizziamo per la generazione del consenso è una versione semplificata del protocollo GHOST introdotto da Sompolinsky e Zohar [2013]. Questo processo è dettagliato nella sezione 10.

3	Convenzioni
 
Per la notazione formale di questo lavoro, uso una serie di convenzioni tipografiche, alcune delle quali alquanto particolari:
I due insiemi di valori di stato altamente strutturati, ‘top-level’, sono indicati da lettere greche minuscole in grassetto. L’insieme che ricade in uno stato del mondo è dato da σ (o sue varianti), mentre quello compreso negli stati-macchina da μ.
